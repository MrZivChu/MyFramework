//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ChildrenHelperWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ChildrenHelper), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("GetHieChild", GetHieChild);
		L.RegFunction("GetClassType", GetClassType);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("list", get_list, set_list);
		L.RegVar("dic", get_dic, set_dic);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetHieChild(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ChildrenHelper obj = (ChildrenHelper)ToLua.CheckObject(L, 1, typeof(ChildrenHelper));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject o = obj.GetHieChild(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	static Type classType = typeof(ChildrenHelper);

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetClassType(IntPtr L)
	{
		ToLua.Push(L, classType);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_list(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ChildrenHelper obj = (ChildrenHelper)o;
			System.Collections.Generic.List<Children> ret = obj.list;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index list on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ChildrenHelper obj = (ChildrenHelper)o;
			System.Collections.Generic.Dictionary<string,UnityEngine.GameObject> ret = obj.dic;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index dic on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_list(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ChildrenHelper obj = (ChildrenHelper)o;
			System.Collections.Generic.List<Children> arg0 = (System.Collections.Generic.List<Children>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<Children>));
			obj.list = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index list on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_dic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ChildrenHelper obj = (ChildrenHelper)o;
			System.Collections.Generic.Dictionary<string,UnityEngine.GameObject> arg0 = (System.Collections.Generic.Dictionary<string,UnityEngine.GameObject>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<string,UnityEngine.GameObject>));
			obj.dic = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index dic on a nil value" : e.Message);
		}
	}
}

